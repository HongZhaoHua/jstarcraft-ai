Model接口(规定基本流程)
Model => Layer接口(单输入/单输出,有参数,有激活函数)
Model => Vertex接口(多输入/单输出)
Model => Graph接口(组合Vertex,多输入/多输出,有损失函数)

Optimizer.optimize => 
	Graph.doForward => 
		for(Vertex.doForward)
		LossFunction.doForward
	Graph.doBackward => 
		LossFunction.doBackward
		for(Vertex.doBackward)
		for(Layer.learn) => 
			
	Graph.updateGradients => 
		Normalization(Gradient)
		Learner(Gradient)
	Searcher.searchStep(Gradient)
	Graph.updateParameters => 
		StepFunction(Parameter,Gradient,Step)

A Java implement of Deep Neural Network.(CNN,RNN)
https://github.com/1036225283/xws

Java实现的深度神经网络:
https://blog.csdn.net/u011913612/category_9271841.html

A Java implement of Deep Neural Network:
https://github.com/sunnythree/CupDnn

Java Machine Learning Library:
https://github.com/Daniel-Liu-c0deb0t/Java-Machine-Learning

拓扑排序的原理及其实现:
http://blog.csdn.net/dm_vincent/article/details/7714519

拓扑排序(Java):
http://www.cnblogs.com/liuzhen1995/p/6389366.html

拓扑排序的两种实现：Kahn算法和DFS算法:
http://blog.csdn.net/qinzhaokun/article/details/48541117

An Engine-Agnostic Deep Learning Framework in Java:
https://github.com/awslabs/djl

DL4J博客:
http://blog.csdn.net/wangongxi
http://blog.csdn.net/u011669700
https://github.com/sjsdfg/deeplearning4j-issues

DL4J中文:
https://deeplearning4j.konduit.ai/v/zhong-wen-v1.0.0/
